package markup

templ OpenGraphTemplate(props OpenGraphProps) {
    if props.Title != "" {
        <meta property="og:title" content="{ .Title }" />
    }
    if props.Description != "" {
        <meta property="og:description" content="{ .Description }" />
    }
    if props.Type != "" {
        <meta property="og:type" content="{ .Type }" />
    }
    if props.URL != "" {
        <meta property="og:url" content="{ .URL }" />
    }
    if len(props.Image) > 0 {
        for _, image := range props.Image {
           @OpenGraphImage(image)
        }
    }
    if len(props.Audio) > 0 {
        for _, audio := range props.Audio {
            @OpengraphAudio(audio)
        }
    }
    if props.Determiner != "" {
        <meta property="og:determiner" content="{ .Determiner }" />
    }

    if props.Locale != "" {
        <meta property="og:locale" content="{ .Locale }" />
    }
    <!--
    if len(props.LocaleAlt) > 0 {
        for _, locale := range props.LocaleAlt {
            <meta property="og:locale:alternate" content="{ .locale }" />
        }
    } -->
    if props.SiteName != "" {
        <meta property="og:site_name" content="{ .SiteName }" />
    }
    if len(props.Video) > 0 {
        for _, video := range props.Video {
           @OpengraphVideo(video)
        }
    }
}

templ OpenGraphImage(props OpengraphImageProps) {
    if props.URL != "" {
        <meta property="og:image" content="{ props.URL }" />
    }
    if props.SecureURL != "" {
        <meta property="og:image:secure_url" content="{ props.SecureURL }" />
    }
    if props.Type != "" {
        <meta property="og:image:type" content="{ props.Type }" />
    }
    if props.Width > 0 {
        <meta property="og:image:width" content="{ props.Width }" />
    }
    if props.Height > 0 {
        <meta property="og:image:height" content="{ props.Height }" />
    }
    if props.Alt != "" {
        <meta property="og:image:alt" content="{ props.Alt }" />
    }
}

templ OpengraphVideo(props OpengraphVideoProps) {
    if props.URL != "" {
        <meta property="og:video" content="{ props.URL }" />
    }
    if props.SecureURL != "" {
        <meta property="og:video:secure_url" content="{ props.SecureURL }" />
    }
    if props.Type != "" {
        <meta property="og:video:type" content="{ props.Type }" />
    }
    if props.Width > 0 {
        <meta property="og:video:width" content="{ props.Width }" />
    }
    if props.Height > 0 {
        <meta property="og:video:height" content="{ props.Height }" />
    }
    if props.Duration > 0 {
        <meta property="og:video:duration" content="{ props.Duration }" />
    }
}

templ OpengraphAudio(props OpengraphAudioProps) {
    if props.URL != "" {
        <meta property="og:audio" content="{ props.URL }" />
    }
    if props.SecureURL != "" {
        <meta property="og:audio:secure_url" content="{ props.SecureURL }" />
    }
    if props.Type != "" {
        <meta property="og:audio:type" content="{ props.Type }" />
    }
}
